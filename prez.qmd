---
title: "A space-time cut-cell method for phase change: from stationary geometries to moving interfaces"
authors: "L. Libat, V. Le Chenadec, E. Chénier, C. Selçuk"
date: "2025-04-10"
date-format: long
institute: "Multiscale Modeling and Simulation Laboratory, Gustave Eiffel University, Champs-sur-Marne, France"
bibliography: references.bib
include-in-header:
    - text: |
            <style>
            #title-slide .title {
                font-size: 1.5em;
            }
            </style>
format:
    revealjs: 
        smaller: true
        theme: default
        logo: images/MSME.jpg
        css: styles.css
        slide-number: true
        preview-links: auto
        toc: true
        toc-depth: 1
        footer: |
            <p>© 2025 L. Libat, V. Le Chenadec, E. Chénier, C.Selçuk</p>
---

# Introduction 

## Introduction

- Interfacial Flows : Flows where a sharp interface separates two immiscible phases
- Phase Change : A process where a substance transforms from one phase to another

::: {layout-ncol="2"}
![Ice Formation](images/ice.jpg){width=17em}

![Diphasic fire hose](images/firefighter.png){width=21em}
:::

## Interfacial Conservation Laws

**Mass**

$$
\frac{\partial \rho}{\partial t} + \nabla\cdot(\rho\mathbf{v}) = 0
\quad 
[[\rho (\mathbf{v}-\mathbf{v}_I)\cdot\mathbf{n}]] = 0
$$

**Energy**

$$
\rho C_p \frac{\partial T}{\partial t} + \nabla \cdot (\mathbf{j}) = S
\quad
\rho\lambda(\mathbf{v}_I\cdot\mathbf{n}) = [[ k \frac{\partial T}{\partial n}|_{x_I} ]]
$$

**Species**

$$
\frac{\partial C}{\partial t} + \nabla\cdot(C\mathbf{v}) =
\nabla\cdot(D\nabla C)
\quad
[[ C (\mathbf{v}-\mathbf{v}_I)\cdot\mathbf{n} - D\frac{\partial C}{\partial n}]] = 0
$$

## Classical Phase Change Problems

- An "old" classical problem in phase change [see @Stefan1891]
- A solid is heated. The solid melts and the liquid flows
- Classical experiments:
  - Solification from a cooled boundary
  - Melting from a hot boundary
  - Freezing into a supercooled melt

## Thermodynamic Considerations

- **Flat Interface**
  - $T_1 = T_2 = T_m$
  - $P_1 = P_2$

- **Curved Interface**
  - Equilibrium modified by capillarity.
  - Gibbs–Thomson (see @Chen1997)
    
    $$
    T = T_m\Bigl(1 - \frac{2\gamma \kappa}{\rho \lambda} - \epsilon V\Bigr)
    $$
    
  - where $\gamma$ indicates surface tension, $\kappa$ representes mean curvature; $\rho$ indicates density; $\lambda$ indicates latent heat per unit mass; $V$ indicates interface velocity; $\epsilon$ indicates molecular kinetic coefficient

## Stefan Problem

Given $\Omega_1(t)$ and $\Omega_2(t)$, find the temperature $T(x,t)$ and the free boundary $s(t)$ such that:

$$
\begin{aligned}
T_t - \nabla\cdot (k_i\nabla T)&=0, \quad x\in\Omega_i(t),\; t>0\\[1ex]
T(s(t),t)&=f(T_m,\kappa,\dot{s}), \quad t>0,\\[1ex]
L\,\frac{ds}{dt} &=  [[k_i\nabla T\cdot\mathbf{n}]] , \quad t>0,\\[1ex]
T(x,0)&=T_0(x), \quad x\in\Omega,\\[1ex]
s(0)&=s_0.
\end{aligned}
$$

## Why a Cut Cell Method ?

- A method to handle complex geometries with cartesian grids
- Sharpness of the interface is preserved
- Two-fluid formulation is used [see @Remmerswaal2022]

## Requirements

- Conservation of physical quantities (mass, energy)
- Sharpness of the interface
- Staggered grid arrangement
- Imposition of various interface conditions (Robin, Jump, ...)
- Conservative treatment of moving interfaces

# Stationary geometries

- Modified Finite Volume Method
- Discretization of the operators
- Interface treatment
- Problem resolution


## Divergence operator

::: {layout-ncol="2"}

$$
\begin{aligned}
\int_{\Omega} \nabla \cdot \mathbf{q} \, dV &= \int_{\partial \Omega} \mathbf{q} \cdot \mathbf{n} \, dS \\
\end{aligned}
$$

![](images/divergence.svg){align=top width="200%"}
:::

$$
\begin{aligned}
V\text{div}(\mathbf{q}) &= \sum_{\text{faces}} \mathbf{q} \cdot \mathbf{n} \, \Delta S \\
& = \Delta y \left( {q}^{\omega,+}_{x} - {q}^{\omega,-}_{x} \right) + \Delta x \left( {q}^{\omega,+}_{y} - {q}^{\omega,-}_{y} \right)
\end{aligned}
$$

## Gradient operator

::: {layout-ncol="2"}

$$
\begin{aligned}
\int_{\Omega} \nabla T \, dV &= \int_{\partial \Omega} T \mathbf{n} \, dS \\
\end{aligned}
$$

![](images/gradient.svg){align=top,width="200%"}
:::

$$
\begin{aligned}
W_{x} \text{grad}_x(T) &= \sum_{\text{faces}} T \mathbf{n} \, \Delta S \\
& = \Delta y \left( T^{\omega,+} - T^{\omega,-} \right)
\end{aligned}
$$


## Interface treatment

- Linear representation of the interface

::: {layout-ncol="2"}
$$
\begin{aligned}
A_{x}^{+} - A_{x}^{-} &=  \Gamma \cdot \mathbf{n}_x \\
A_{y}^{+} - A_{y}^{-} &=  \Gamma \cdot \mathbf{n}_y
\end{aligned}
$$

![](images/interface.svg){fig-align="center" height="200%"}
:::
- Interface conditions are imposed on the interface


## Divergence operator

::: {layout-ncol="2"}
$$
\begin{aligned}
V \text{div}(\mathbf{q}) &= \sum_{\text{faces}} \mathbf{q} \cdot \mathbf{n} \, \Delta S \\
\end{aligned}
$$

![](images/divergence_cut.svg){fig-align="center" height="200%"}
:::

$$
\begin{aligned}
V \text{div}(\mathbf{q}) &= A_{x}^{+} {q}_{x}^{\omega,+} - A_{x}^{-} {q}_{x}^{\omega,-} + A_{y}^{+} {q}_{y}^{\omega,+} - A_{y}^{-} {q}_{y}^{\omega,-} \\
& - \Gamma \cdot \mathbf{n}_x {q}_x^\gamma - \Gamma \cdot \mathbf{n}_y {q}_y^\gamma
\end{aligned}
$$

## Divergence operator

::: {layout-ncol="2"}
$$
\begin{aligned}
V \text{div}(\mathbf{q}) &= \sum_{\text{faces}} \mathbf{q} \cdot \mathbf{n} \, \Delta S \\
\end{aligned}
$$

![](images/divergence_cut.svg){fig-align="center" height="200%"}
:::

$$
\begin{aligned}
V\text{div}(\mathbf{q}) &= A_{x}^{+} {q}_{x}^{\omega,+} - A_{x}^{-} {q}_{x}^{\omega,-} + A_{y}^{+} {q}_{y}^{\omega,+} - A_{y}^{-} {q}_{y}^{\omega,-} \\
& - (A_x^{+} - A_x^{-}) {q}_x^\gamma - (A_y^{+} - A_y^{-}) {q}_y^\gamma
\end{aligned}
$$

## Gradient operator

::: {layout-ncol="2"}
$$
\begin{aligned}
W_x \text{grad}_x(T) &= \sum_{\text{faces}} T \mathbf{n} \, dS \\
\end{aligned}
$$

![](images/gradient_cut.svg){fig-align="center" height="200%"}
:::

$$
\begin{aligned}
W_x \text{grad}_x(T) &= B_{x}^{+} T^{\omega,+} - B_{x}^{-} T^{\omega,-} \\
& - \Gamma \cdot \mathbf{n}_x T^{\gamma,+} - \Gamma \cdot \mathbf{n}_x T^{\gamma,-}
\end{aligned}
$$

## Gradient operator

::: {layout-ncol="2"}
$$
\begin{aligned}
W_x \text{grad}_x(T) &= \sum_{\text{faces}} T \mathbf{n} \, dS \\
\end{aligned}
$$

![](images/gradient_cut.svg){fig-align="center" height="200%"}
:::

$$
\begin{aligned}
W_x \text{grad}_x(T) &= B_{x}^{+} T^{\omega,+} - B_{x}^{-} T^{\omega,-} \\
& - (B_x^{+} - A_x) T^{\gamma,+} - (A_x - B_x^{-}) T^{\gamma,-}
\end{aligned}
$$

## Operators

- Kronecker product to build global matrix operators
- Divergence operator

$$
\begin{aligned}
\text{div}(\mathbf{q}^\omega, \mathbf{q}^\gamma) &=-\,(\mathbf{G}^T + \mathbf{H}^T)\,\mathbf{q}^\omega +
\mathbf{H}^T\,\mathbf{q}^\gamma
\end{aligned}
$$

- Gradient operator

$$
\begin{aligned}
\text{grad}(T^\omega, T^\gamma) &= \begin{pmatrix}
\text{grad}_x(T^\omega, T^\gamma) \\
\text{grad}_y(T^\omega, T^\gamma)
\end{pmatrix} \\
&= \mathbf{W}^\dagger \bigl(\mathbf{G}\,T^\omega \;+\; \mathbf{H}\,T^\gamma\bigr)
\end{aligned}
$$


## Interface conditions

- Dirichlet condition : $T = g \quad \text{on } \Gamma$

$$
\begin{aligned}
T^\gamma &= g^\gamma
\end{aligned}
$$

- Neumann condition : $\mathbf{q} \cdot \mathbf{n} = h \quad \text{on } \Gamma$

$$
\begin{aligned}
\text{div}(0, \mathbf{q}^\gamma) &= h^\gamma \Gamma
\end{aligned}
$$

- Robin condition : $\alpha T + \beta \mathbf{q} \cdot \mathbf{n} = g \quad \text{on } \Gamma$

$$
\begin{aligned}
\alpha \Gamma T^\gamma + \beta \text{div}(0, \mathbf{q}^\gamma) &= g^\gamma \Gamma
\end{aligned}
$$

## Interface conditions

- Scalar Jump condition : $[[T]] = g \quad \text{on } \Gamma$

$$
\begin{aligned}
T_1^\gamma - T_2^\gamma &= g^\gamma
\end{aligned}
$$

- Vector Jump condition : $[[\mathbf{q} \cdot \mathbf{n}]] = \mathbf{g} \quad \text{on } \Gamma$

$$
\begin{aligned}
\text{div}(0, \mathbf{q}_1^\gamma) - \text{div}(0, \mathbf{q}_2^\gamma) &= \mathbf{g}^\gamma \Gamma
\end{aligned}
$$

## Poisson equation

$$
\begin{aligned}
\nabla \cdot (k \nabla T) &= f \quad \text{in } \Omega \\
\alpha T + \beta \mathbf{q} \cdot \mathbf{n} &= g \quad \text{on } \Gamma
\end{aligned}
$$

$$
\begin{aligned}
 \begin{bmatrix}
G^T I_k W^\dagger G & G^T I_k W^\dagger H  \\
I_\beta H^T W^\dagger G & I_\beta H^T W^\dagger H + I_\alpha I_\Gamma  \\
\end{bmatrix} \begin{bmatrix}
 T^\omega \\
 T^\gamma
\end{bmatrix} = \begin{bmatrix}
V f^\omega \\
I_\Gamma g^\gamma
\end{bmatrix}
\end{aligned}
$$

- Boundary condition also discretized
- Larger system to solve
- No need to interpolate the boundary condition

## Poisson equation - Results

::: {layout-ncol=2}

![L² norm Convergence](images/poisson_rob_conv_L2.png)

![Log$_{10}$ of the error](images/poisson_rob_log10_error_border.png)

:::

## Heat Equation

$$
\begin{aligned}
\frac{\partial T}{\partial t} - D \nabla \cdot (\nabla T) &= f \quad \text{in } \Omega, \quad t > 0 \\
\alpha T + \beta \mathbf{q} \cdot \mathbf{n} &= g \quad \text{on } \Gamma, \quad t > 0 \\
T &= T_0 \quad \text{on } \Omega, \quad t = 0 \\
\end{aligned}
$$

$$
\begin{aligned}
    \begin{bmatrix}
V + \Delta t I_D G^T W^\dagger G & \Delta t I_D G^T W^\dagger H  \\
I_\beta H^T W^\dagger G & I_\beta H^T W^\dagger H + I_\alpha I_\Gamma  \\
\end{bmatrix} \begin{bmatrix}
 T^{n+1,\omega} \\
 T^{n+1,\gamma}
\end{bmatrix} = \begin{bmatrix}
\Delta t V f^{n+1,\omega} + V T^{n,\omega} \\
I_\Gamma g^\gamma
\end{bmatrix}
\end{aligned}
$$

## Heat Equation - Results

::: {#fig-heat layout-ncol=2}

![Backward Euler](images/conv_max_BE.png){#fig-heat-be}

![Crank-Nicolson](images/conv_max_CN.png){#fig-heat-cn}

Convergence plot on $L^\infty$ norm
:::

<!--
## Two-phase Poisson equation

Two domains $\Omega_1$ and $\Omega_2$ separated by an interface $\Gamma$

$$
\begin{aligned}
\nabla \cdot (k_i \nabla T_i) &= f_i \quad \text{in } \Omega_i \\
[[k_i \nabla T_i \cdot \mathbf{n}]] &= h \quad \text{on }\Gamma \\
[[T_i]] &= g \quad \text{on }\Gamma \\
\end{aligned}
$$

<div style="font-size: 65%">
$$
\begin{aligned}
    \begin{bmatrix}
    G_1^T I_{k_1} W_1^\dagger G_1 & G_1^T I_{k_1} W_1^\dagger H_1 & 0 & 0 \\
    0 & I & 0 & -I  \\
    0 & 0 & G_2^T I_{k_2} W_2^\dagger G_2 & G_2^T I_{k_2} W_2^\dagger H_2 \\
    I_{k_1} H_1^T W_1^\dagger G_1 & I_{k_1} H_1^T W_1^\dagger H_1 &  I_{k_2} H_2^T W_2^\dagger G_2 & I_{k_2} H_2^T W_2^\dagger H_2
    \end{bmatrix} \begin{bmatrix}
    T_1^\omega \\
    T_1^\gamma \\
    T_2^\omega \\
    T_2^\gamma \\
    \end{bmatrix} = \begin{bmatrix}
    V_1 f_1^\omega \\
    g^\gamma \\
    V_2 f_2^\omega \\
    I_\Gamma h^\gamma \\
    \end{bmatrix}
\end{aligned}
$$
</div>

## Two-phase Poisson equation - Results
-->

## Two-phase Heat Equation

$$
\begin{aligned}
\frac{\partial T_i}{\partial t} - D_i \nabla \cdot (\nabla T_i) &= f_i \quad \text{in } \Omega_i, \quad t > 0 \\
[[D_i \nabla T_i \cdot \mathbf{n}]] &= h \quad \text{on }\Gamma, \quad t > 0 \\
[[T_i]] &= g \quad \text{on }\Gamma, \quad t > 0 \\
\end{aligned}
$$

<div style="font-size: 65%">
$$
\begin{aligned}
    \begin{bmatrix}
V_1 + \Delta t I_{D_1} G_1^T W_1^\dagger G_1 & \Delta t I_{D_1} G_1^T W_1^\dagger H_1 & 0 & 0 \\
0 & I & 0 & -I  \\
0 & 0 & V_2 + \Delta t I_{D_2} G_2^T W_2^\dagger G_2 & \Delta t I_{D_2} G_2^T W_2^\dagger H_2 \\
I_{D_1} H_1^T W_1^\dagger G_1 & I_{D_1} H_1^T W_1^\dagger H_1 &  I_{D_2} H_2^T W_2^\dagger G_2 & I_{D_2} H_2^T W_2^\dagger H_2
    \end{bmatrix} \begin{bmatrix}
    T_1^{n+1,\omega} \\
    T_1^{n+1,\gamma} \\
    T_2^{n+1,\omega} \\
    T_2^{n+1,\gamma} \\
    \end{bmatrix} = \begin{bmatrix}
    \Delta t V_1 f_1^{n+1,\omega} + V_1 T_1^{n,\omega} \\
    g^\gamma \\
    \Delta t V_2 f_2^{n+1,\omega} + V_2 T_2^{n,\omega} \\
    I_\Gamma h^\gamma \\
    \end{bmatrix}
\end{aligned}
$$
</div>

## Two-phase Heat Equation - Results

![](images/heat_2d_2ph_henry_end.png){fig-align="center"}

## Two-phase Heat Equation - Results

::: {#fig-heat-2ph-sherwood layout-ncol=2}

![Sherwood number](images/Sherwood.png){#fig-heat-2ph-sherwood}

![Zoom](images/Sherwood_zoom.png){#fig-heat-2ph-sherwood-zoom}

Sherwood number
:::

# Moving interfaces

- Space-Time Mesh : Incorporate time as an extra-dimension on the spatial mesh
- 2 cases : 
    - Prescribed Motion : Solid Body Motion
    - Interfacial Problem
- Implicit interface tracking : Coupling between the interface update and the resolution

## Reynolds Transport Theorem

Let $f$ be a scalar field:

$$
\frac{d}{dt} \int_{\Omega(t)} f\, dV
=
\int_{\Omega(t)} \frac{\partial f}{\partial t}\, dV
+
\int_{\partial \Omega(t)} \bigl(\mathbf{w}\cdot\mathbf{n}\bigr) f\, dS,
$$

- $\Omega(t)$ is a moving/deforming control volume  
- $\mathbf{w}$ is the velocity of the moving boundary at $x\in \partial\Omega(t)$  
- $\mathbf{n}(\mathbf{x},t)$ is the outward normal on $\partial \Omega(t)$

## Reynolds Transport Theorem

For $f=1$:

$$
V^{n+1} - V^n
=
\int_{t_n}^{t_{n+1}} \int_{\partial \Omega_i} \mathbf{w}\cdot d\mathbf{S}\, dt.
$$

- Geometric Conservation Law (ALE formulation)
- Volume conservation

## Problem discretization

$$
\small
\begin{aligned}
\int_{t_n}^{t_{n+1}} \int_{\Omega(t)}
\Bigl(
c_p \,\frac{\partial T}{\partial t}
\;+\;
\frac{\partial q_\alpha}{\partial x_\alpha}
\Bigr)\,dV\,dt
&=\;
\underbrace{\int_{\Omega(t_{n+1})} c_p\,T\,dV
\;-\;
\int_{\Omega(t_n)} c_p\,T\,dV}_{\substack{\text{net change of}\\c_p\,T\text{ in domain}}}
\\[6pt]
&\quad
-\;\underbrace{\int_{t_n}^{t_{n+1}} \int_{\partial \Omega(t)}
\mathbf{w}\cdot \mathbf{n} \,\bigl(c_p\,T\bigr)\, dS\,dt}_{\substack{\text{boundary motion}\\\text{contribution}}}
\\[6pt]
&\quad+\;\underbrace{\sum_{\alpha\in\{x,y,\dots\}} \;\sum_{\epsilon\in\{+,-\}}
\int_{t_n}^{t_{n+1}} \int_{\partial_{\alpha}^{\epsilon}}
\mathbf{q_\alpha}\cdot \mathbf{n}\, dS\,dt}_{\substack{\text{spatial flux}\\\text{through faces}}}
\\[6pt]
&\quad+\;\underbrace{\int_{t_n}^{t_{n+1}} \int_{\Gamma(t)}
\mathbf{q_\alpha}\cdot \mathbf{n}\, dS\,dt}_{\substack{\text{flux across}\\\text{moving interface } \Gamma(t)}}.
\end{aligned}
$$


## Space-Time Mesh

![From 1D Space Mesh to 2D Space-Time Mesh](images/space_time_mesh.svg)


## Space-Time Regular Cell Discretization

![Space-Time regular cell](images/space_time_div.svg){width="100%" align="center"}

$$
T_i^{\omega,n+1}\Delta x - T_i^{\omega,n} \Delta x 
+ \Delta t\, \frac{\tilde{T}_{i+1}^\omega - \tilde{T}_i^{\omega}}{\Delta x} 
- \Delta t\, \frac{\tilde{T}_{i}^\omega - \tilde{T}_{i-1}^{\omega}}{\Delta x} = 0
$$

$$
\tilde{T}_i^{\omega} = 
\begin{cases}
T_i^{\omega,n+1} & \text{Backward Euler} \\
\frac{1}{2}\left(T_i^{\omega,n} + T_i^{\omega,n+1}\right) & \text{Crank-Nicolson}
\end{cases}
$$

---

## Space-Time Cut Cell Discretization

![Space-Time cut cell : Fixed Interface](images/space_time_div_fix.svg){width="100%" align="center"}

$$
\begin{aligned}
T_i^{\omega,n+1} V_i^{n+1} - T_i^{\omega,n} V_i^{n} 
&+ \Delta t\, q_{i+1/2}^{\omega} - \Delta t\, q_{i-1/2}^{\gamma} = 0
\end{aligned}
$$

$$
\begin{aligned}
W_{i+1/2} q_{i+1/2}^{\omega} = \Delta t \tilde{T}_{i+1}^\omega - \Delta t \tilde{T}_i^{\omega}
\end{aligned}
$$

$$
\begin{aligned}
W_{i-1/2} q_{i-1/2}^{\gamma} = \Delta t \tilde{T}_{i}^\omega - \Delta t \tilde{T}_{i}^{\gamma}
\end{aligned}
$$

## Space-Time Cut Cell Discretization

![Space-Time cut cell : Moving Interface](images/space_time_div_mov.svg){width="100%" align="center"}

$$
\begin{aligned}
\underbrace{T_i^{\omega,n+1} V_i^{n+1} - T_i^{\omega,n} V_i^{n}}_{\substack{\text{net change of} \\ c_p\,T\text{ in domain}}} + \underbrace{(V_i^{n+1} - V_i^{n}) T_i^{\gamma}}_{\substack{\text{boundary motion} \\ \text{contribution}}}
+ \underbrace{\Delta t\, q_{i+1/2}^{\omega}}_{\substack{\text{spatial flux} \\ \text{through faces}}} - \underbrace{\Delta t\, q_{i-1/2}^{\gamma}}_{\substack{\text{flux across} \\ \text{moving interface } \Gamma(t)}} = 0
\end{aligned}
$$


## Fresh/Dead Cell Problem

- **Interface Crossing:** During $\Delta t$, cells may change status:
  - **Fresh cells:** Empty at $t^n$, wet at $t^{n+1}$
  - **Dead cells:** Wet at $t^n$, empty at $t^{n+1}$

::: {layout-ncol="2"}
![Fresh Cell](images/freshcell.svg){width="100%"}

![Dead Cell](images/deadcell.svg){width="100%"}
:::

---

## Fresh/Dead Cell Problem (Mapping)

- **Mapping (Crank–Nicolson):**

$$
\begin{array}{|c|c|c|}
\hline
\tilde{T}^\omega & V^{n+1}=0 & V^{n+1}\neq0 \\
\hline
V^n=0   & 0          & T^{\omega,n+1} \\
\hline
V^n\neq0 & T^{\omega,n+1}     & \dfrac{T^{\omega,n}+T^{\omega,n+1}}{2} \\
\hline
\end{array}
$$

- **Energy Conservation:**
  - **Fresh cells:** Adopt new time-level value.
  - **Dead cells:** Contribute to energy flux, ensuring global energy conservation even for small fluxes (e.g., Lagrange multiplier).

---

## Prescribed Motion

- **Interface Specified:** Known motion (e.g., rigid body, etc.)
- **Example:**

  $$
  \mathbf{x}_{\mathrm{solid}}(t)=\mathbf{R}(\boldsymbol{\omega}(t))\,\mathbf{x}_0
  +\int_0^t \mathbf{v}(\tau)\,d\tau
  $$

  where:
  - $\mathbf{x}_0$: initial position
  - $\mathbf{R}(\boldsymbol{\omega}(t))$: rotation operator
  - $\mathbf{v}(\tau)$: translational velocity

## Prescribed Motion 
- **Embedding:** Embed the geometry in the space-time mesh.
- **Cut-cells:** Integrate partial volumes/faces along the known trajectory.
- **Operators:** Assemble FV operators using time-integrated measures.
- **Advancement:** Update solution since $\Gamma(t)$ is fully prescribed.

---

## Test Case: Shrinking Disk

![Shrinking Disk](images/shrinking.gif){width="100%"}

---

## Implicit Interface Tracking: Overview

- **Interface Not Prescribed:**
  - Interface velocity determined by latent heat balance:
    $$
    \rho\,L\,\dot{s} = [[\mathbf{q}\cdot\mathbf{n}]]
    $$
- **Representation:**
  - Use height function, VOF, or signed distance function.
- **Goal:** Update interface position so that discrete flux balances are satisfied.

---

## VOF Advection vs. Newton Method

::: {layout-ncol="2"}
::: {.column}
**Traditional VOF Approach:**

[see @Weymouth2010]

$$
\frac{\partial \alpha}{\partial t} + \nabla\cdot(\alpha\,\mathbf{u}) = 0
$$

- Interface advection
- Numerical diffusion, splitting errors

![VOF Advection Schematic](images/vof_advection.png){width=100%} 
:::

::: {.column}

:::
:::

---

## VOF Advection vs. Newton Method

::: {layout-ncol="2"}

::: {.column}
**Traditional VOF Approach:**

[see @Weymouth2010]

$$
\frac{\partial \alpha}{\partial t} + \nabla\cdot(\alpha\,\mathbf{u}) = 0
$$

- Interface advection
- Numerical diffusion, splitting errors

![VOF Advection Schematic](images/vof_advection.png){width=100%}

:::

::: {.column}
**Our Newton-Based Method:**

$$
\rho L \frac{\partial s}{\partial t} = [[\mathbf{q}\cdot\mathbf{n}]]
$$

- Enforces conservation
- Iteratively updates interface

![Newton-Based Schematic](images/rootfindingnewton.jpg){width=55%}
:::
:::

---

## Height Function Method

- **Column-Wise Representation:**
  - Each column is treated as 1D volume-fraction data [see @Popinet2009].
- **Interpolation:**
  - Approximate interface profile via B-spline:
    $$
    H(y) = \sum_{k} a_k\,B_k^{(d)}(y)
    $$
- **Volume Conservation:**
  - Enforce that integrated height matches fluid volume.
- **Smoothness:**
  - Higher-degree splines yield smoother interfaces.


---

## Newton-Based Interface Update

- **Iterative Procedure:**
  - **Guess:** Initial interface position $s^{n+1,(k)}$ (via height function).
  - **Build:** Cut-cell geometry and finite-volume operators.
  - **Solve:** Heat equation to obtain temperature field $\mathbf{x}_k$.
  - **Residual:** Compute $\mathrm{res}_k = F(s^{n+1,(k)},\mathbf{x}_k)$ (Stefan condition).
  - **Update:**
    $$
    H^{n+1,(k+1)} = H^{n+1,(k)} - \alpha\,\mathrm{res}_k
    $$
  - **Reconstruct:** Update interface position $s^{n+1,(k+1)}$.
  - **Repeat** until $|\mathrm{res}_k| < \varepsilon$.
- **Outcome:** Satisfies the discrete Stefan (flux jump) condition.

---

## Newton-Based Interface Update

![Newton-Based Interface Update](images/newton_update.png){width=100%}

---

## Test Case: 1D Stefan Problem

- **Problem:**
  - Fusion of a solid bar.
  - Initial temperature $T_0 = 0$ : Cooled Melting.
  - Dirichlet boundary condition $T = 1$.


::: {layout-ncol="2"}
::: {.column}
![](images/stefan_1D_interface.png){width=100% fig-align="center"}
:::

::: {.column}
![](images/stefan_1D_temp.gif){width=100% fig-align="center"}
:::
:::

## Test Case: 1D Stefan Problem

- Pretty fast convergence : $O(k)$

![](images/stefan_1D_residual.png){width=100% fig-align="center"}

---

## Test Case: 2D Stefan Problem

- **Problem:**
  - Fusion of a slab.
  - Initial temperature $T_0 = 0$ : Cooled Melting.
  - Dirichlet boundary condition $T = 1$.
  - $x(t) = A\sqrt{t}$

::: {layout-ncol="2"}
::: {.column}
![](images/stefan_2d_Inter_Conv.png){width=100% fig-align="center"}
:::

::: {.column}
![](images/stefan_2D_temp.gif){width=100% fig-align="center"}
:::
:::

---

## Test Case: Mullins-Sekerka Instability

- **Problem:**
  - Solidification of a supercooled liquid.
  - Initial temperature $T_0 = 1$ : Supercooled.
  - Dirichlet boundary condition $T = T_m - \epsilon_v V - \epsilon_{\kappa} \kappa$.

::: {layout-ncol="2"}
::: {.column}
![](images/mullins_sekerka_interface.png){width=100% fig-align="center"}

:::

::: {.column}
![](images/mullins_sekerka_temp.gif){width=100% fig-align="center"}

:::
:::

# Conclusion

## Conclusions

- Cut-cell method for stationnary geometries:
  - Conservation of physical quantities
  - Super-linear rate of convergence and good accuracy
  - No need to interpolate the boundary condition

- Implict Interface tracking with Newton-based method:
  - Enforces conservation at the interface
  - Iteratively adjusts the interface position
  - Agnostic to the interface parametrization

---

## Perspectives

- Two-phase flow Navier-Stokes solver :
  - Solve for pressure and velocity fields 
  - Fully coupled method

- Coupling with the actual Heat/Species solver

- Preconditioning strategies and parallelization

---

## References

::: {#refs}
:::

--- 

# Appendix

---

## Appendix - Mullins-Sekerka Instability

- **Setup:** [@Mullins1964]
  - Base state: $T_{st}(y) = T_m + G\,y$ (flat interface at $y=0$)
  - Perturbed interface: $h(x,t) = h_0 \sin(kx)e^{\omega t}$

- **Key Steps:**
  - Apply Gibbs-Thomson with kinetics: $T|_{y=h} = T_m - \Gamma\kappa - \epsilon\,\partial_t h$
  - Use Stefan condition: $\rho L\,\partial_t h = -k_l\,\left.\frac{\partial T}{\partial y}\right|_{y=0^+}$

- **Dispersion Relation:**
  $$\omega(k) = -\frac{k_l\,k\,(\Gamma\,k^2 + G)}{\rho L + k_l\,k\,\epsilon}$$

---

## Appendix - Mullins-Sekerka Instability

- **Physical Insights:**
  - Growth when $G < 0$ and $|G| > \Gamma k^2$ (undercooled melt)
  - Stabilized by:
    - Surface tension ($\Gamma$): dampens high-k perturbations
    - Kinetic undercooling ($\epsilon$): reduces growth rate
  - Maximum growth rate at $k_\text{max} = \sqrt{|G|/3\Gamma}$ (when $\epsilon \approx 0$)

---

## Appendix - Mullins-Sekerka Instability

::: {layout-ncol="2"}
![](/images/amplitude_damped.png)

![](/images/interface_damped.png)
:::

- When $G > 0$, perturbations are damped
- Interface gradually returns to a planar state
